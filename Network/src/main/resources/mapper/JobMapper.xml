<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="top.hellooooo.netjobsubmission.mapper.JobMapper">
    <insert id="getAllClazz" parameterType="Job">
        insert into j_job(job_description, originator, start_time, deadline, submit_count, total_count)
        values(#{job_description}, #{originator}, #{start_time}, #{deadline}, #{submit_count}, #{total_count})
    </insert>

<!--    返回新插入的Job，为了获取Job_ID-->
    <select id="getJobAfterInsert" parameterType="int" resultType="Job">
        select * from j_job where originator = #{user_id} order by submit_time desc limit 1;
    </select>

<!--    需要注意，开始时间就不能是0了-->
    <select id="getUnexpiredJobs" resultType="Job">
        select * from j_job where unix_timestamp(deadline) > unix_timestamp(now())
#             这里需要保证start_time不是null
#             and unix_timestamp(start_time) >= unix_timestamp(now())
        limit 30;
    </select>

    <select id="getUnsubmitUser" resultType="User">
        select user.* from j_user user, j_submit_person person where
        user.id = person.user_id and person.job_id = #{id} and person.submit_time is null
    </select>

    <select id="getCurrentJobByUserId" parameterType="int" resultType="Job">
        select job.* from j_job job join j_submit_person person on person.job_id = job.id
        and person.user_id = #{userId} and person.submit_time is null
    </select>

    <select id="getJobByJobId" parameterType="int" resultType="Job">
        select * from j_job where id = #{id}
    </select>

    <select id="getJobByUserIdAndJobId" resultType="Job">
        select job.* from j_job job,j_submit_person person where job.id = #{jobId} and
        person.user_id = #{userId} and job.id = person.job_id;
    </select>

<!--    将Job对象插入数据库-->
    <insert id="jobAdd" parameterType="Job">
        insert into j_job(job_description, originator, start_time, deadline, submit_count, total_count, submit_time)
        values (#{jobDescription},#{originator},#{startTime},#{deadline},#{submitCount},#{totalCount},#{submitTime})
    </insert>

    <update id="updateJobSubmitCount" parameterType="int">
        update j_job set submit_count = submit_count + 1 where id = #{jobId};
    </update>

    <update id="updateJobSubmitPerson">
        update j_submit_person set submit_time = now() where user_id = #{userId} and job_id = #{jobId};
    </update>

    <insert id="setFilename" parameterType="Filename">
        insert into j_file_name (part_count, job_id, separat, part1, part2, part3, part4, part5, part6)
        values (#{partCount}, #{jobId}, #{separat}, #{part1}, #{part2}, #{part3}, #{part4}, #{part5}, #{part6});
    </insert>

<!--    将需要提交作业的用户插入数据库-->
    <insert id="insertJobSubmitPerson" parameterType="SubmitPerson">
        insert into j_submit_person(user_id, job_id)
        values
        <foreach collection="list" item="each" separator=",">
            (#{each.userId}, #{each.jobId})
        </foreach>
    </insert>

<!--    Filename getFilenameByJobId(Integer jobId);-->
    <select id="getFilenameByJobId" parameterType="int" resultType="Filename">
        select * from j_file_name where job_id = #{jobId};
    </select>

<!--    删除j_submit_person表中的用户数据-->
    <delete id="dropSubmitPersonByUserId" parameterType="int">
        delete from j_submit_person where user_id = #{id}
    </delete>
</mapper>